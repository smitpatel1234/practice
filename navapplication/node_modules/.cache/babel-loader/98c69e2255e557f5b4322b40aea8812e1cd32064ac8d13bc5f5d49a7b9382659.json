{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMIT PATEL\\\\Desktop\\\\internship\\\\day-2,3,4 task\\\\practice\\\\react application\\\\navapplication\\\\src\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Users() {\n  _s();\n  const [user, setUser] = useState({\n    username: \"\",\n    job: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const addTask = () => {\n    localStorage.setItem(`${user.username}`, JSON.stringify(user.job));\n    // Get display logic if needed\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      name: \"username\",\n      value: user.username,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"job\",\n      children: \"Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"job\",\n      name: \"job\",\n      value: user.job,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Users, \"gyfgVGfwaBEr++TFmK0wt7WNMQQ=\");\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Users","_s","user","setUser","username","job","handleChange","e","name","value","target","addTask","localStorage","setItem","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SMIT PATEL/Desktop/internship/day-2,3,4 task/practice/react application/navapplication/src/Users.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Users() {\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    job: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => { \r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const addTask = () => {\r\n    localStorage.setItem(`${user.username}`, JSON.stringify(user.job));\r\n    // Get display logic if needed\r\n  };\r\n \r\n  return (\r\n    <>\r\n      <div>Users</div>\r\n      <label htmlFor=\"username\">Username</label>\r\n      <input type=\"text\" id=\"username\" name=\"username\" value={user.username} onChange={handleChange} />\r\n      <label htmlFor=\"job\">Job</label>\r\n      <input type=\"text\" id=\"job\" name=\"job\" value={user.job} onChange={handleChange} />\r\n      <button onClick={addTask}>Add User</button>\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,QAAQ,EAAE,EAAE;IACZC,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrC,CAAC;EAED,MAAME,OAAO,GAAGA,CAAA,KAAM;IACpBC,YAAY,CAACC,OAAO,CAAC,GAAGX,IAAI,CAACE,QAAQ,EAAE,EAAEU,IAAI,CAACC,SAAS,CAACb,IAAI,CAACG,GAAG,CAAC,CAAC;IAClE;EACF,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBvB,OAAA;MAAOwB,OAAO,EAAC,UAAU;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1CvB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,UAAU;MAACf,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEP,IAAI,CAACE,QAAS;MAACoB,QAAQ,EAAElB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjGvB,OAAA;MAAOwB,OAAO,EAAC,KAAK;MAAAL,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChCvB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,KAAK;MAACf,IAAI,EAAC,KAAK;MAACC,KAAK,EAAEP,IAAI,CAACG,GAAI;MAACmB,QAAQ,EAAElB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClFvB,OAAA;MAAQ4B,OAAO,EAAEd,OAAQ;MAAAK,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC3C,CAAC;AAEP;AAACnB,EAAA,CA1BuBD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}